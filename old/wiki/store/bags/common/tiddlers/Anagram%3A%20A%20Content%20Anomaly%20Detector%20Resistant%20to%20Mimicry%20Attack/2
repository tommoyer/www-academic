modifier: ThomasMoyer
created: 
modified: 20120611153448
type: None
tags: 

''Contribution'': In this paper, the authors present Anagram, an network packet anomaly detector. Anagram has several advantages over other systems, including high accuracy, low false-positive rate, and high performance. The authors show that Anagram is resistant to mimicry attacks, unlike a previous system PAYL. Anagram uses n-gram analysis to determine if a network packet payload is anomalous. If it is determined that it is, an alert is raised. The authors claim that Anagram provides a low false-positive rate, leading to fewer alerts that must be manually examined by an administrator.

''Motivation'': Previously, the authors developed PAYL, a payload analysis tool that used 1-grams on the byte sequence of network packets to determine if a packet was legitimate. However, PAYL is susceptible to mimicry attacks, where an attacker ensures tha the malicious payload looks similar to benign traffic, and thus is allowed to pass the PAYL filter without raising an alert. Such an attack was demonstrated on PAYL, and Anagram is an attempt to prevent such attacks on payload analysis tools. Unlike PAYL, Anagram relies on n-gram analysis, with n>1.

''Related work'': The related work presented by the authors is broadly broken into two categories. The first is anomaly detection and signature generation for malicious traffic, and the second is about attacks on such systems, such as polymorphic worms, mimicry and learning-based attacks. For anomaly detection and signature generation, the authors examine several tools, such as autograph and polygraph, which generate signatures for attack traffic. Autograph assumes that the attack payload is a single contiguous block of tokens, while polygraph relaxes this assumption to allow non-contiguous token strings, such as seen in polymorphic worms. In addition, systems like Honeycomb and EarlyBird learn malicious traffic from captured honeypot traffic, which then feeds into an IDS on each host. Shiled is a tool that looks for specific signatures in network traffic, much like Snort. SigFree is another tool aiming to detect malicious payloads, however, unlike other tools, SigFree attempts to detect code without relying on predefined signatures.

Next, the authors look at attacks on the above systems. One common theme is to analyze the payload of malicious traffic. Polymorphic worms get by these tools with relative ease, since the payload changes each time the worm propagates. However, some parts of the worm remain constant, and tools like Polygraph attempt to learn the constant parts, even though they may move around within the payload. Mimicry attacks attempt to fool detection tools by making the payload appear like other benign traffic. Such attacks have been demonstrated on host-based IDS that examine system calls, and more recently on systems like PAYL that examine network traffic. Finally, an active area of research is defeating learning-based systems, and the defense of such attacks. Such attacks attempt to exploit weaknesses in learning algorithms to hide malicious payloads.

''Solution'': Anagram uses n-gram analysis to detect when packets are anomalous. The n-grams are placed in a Bloom filter, and this Bloom filter is then used to score packets. The scoring determines how many of the n-grams in the packet are //not// in the Bloom filter, i.e. $N_{new}/T$, where $T$ is the number of n-grams and $N_{new}$ is the number of n-grams //not// present in the filter. The authors analyze this approach in comparison to a frequency-based scoring, and find that the binary-based approach performs better in their test cases than a frequency-based approach.

''Methodology'': In order to validate their system, the authors capture traffic from two web servers and divide the captured traffic into training data and test data. They examine the effectiveness of their approach as the size of $n$ is varied. They present results for values of 3, 5 and 7. They then examine the false-positive rate as they vary n from 3 to 8, inclusive. The authors then present the learning characteristics of Anagram to get an understanding of how long Anagram should be trained before being deployed in detection mode. After examining the learning characteristics, the authors present a method for privacy-preserving collaboration between Anagram installations. Finally, the authors examine methods to defeat mimicry attacks, including randomized sampling of packet payloads, instead of examining the entire payload.

''Results'': The authors show that the Bloom-filter based Anagram system has a 0.01% false positive rate, and can detect 100% of known attacks. The system is efficient enough to be used real-time (due to the Bloom filters). Anagram is designed to thwart mimicry attacks through randomized sampling. Finally, the authors present methods for continuous training of Anagram filters to detect new attacks.

''Take-away'': N-gram analysis is an effective tool for anomaly detection, and when combined with Bloom-filters, present a compact and efficient approach to anomaly detection.

''Keywords'': anomaly detection, n-gram analysis, Bloom filter, payload inspection, packet inspection, network flow analysis, Snort rules, malicious code detection, mimicry attacks, polymorphic worms, obfuscation, hiding content from analysis, deep packet inspection, behavioral analysis, sandbox testing, flow classification, low and slow attacks

''Cite key'': wps06
Wang, K.; Parekh, J. J. & Stolfo, S. J. Anagram: A Content Anomaly Detector Resistant to Mimicry Attack In Proceedings of the 9 th International Symposium on Recent Advances in Intrusion Detection (RAID), 2006, 226-248
